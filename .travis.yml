language: bash
sudo: require
dist: trusty

before_script:

  - sudo apt-get update
  - sudo apt-get install man-db texlive-latex-extra texlive-xetex texlive-latex-recommended texlive-math-extra fonts-droid fonts-ipafont-mincho fonts-ipafont-gothic fonts-arphic-ukai fonts-arphic-uming fonts-unfonts-core   # "No insta candidate": fonts-japanese-mincho  fonts-japanese-gothic 
  - mkdir $HOME/Downloads
  - export PANDOCVERS=2.1.1-linux
  - wget https://github.com/jgm/pandoc/releases/download/2.1.1/pandoc-$PANDOCVERS.tar.gz -O $HOME/Downloads/pandoc.tar.gz
  - export TGZ=$HOME/Downloads/pandoc.tar.gz
    #- mkdir $HOME/.local     # File already exists
  - export DEST=$HOME/.local
  - tar xvzf $TGZ --strip-components 1 -C $DEST
  - export PATH=$HOME/.local/bin:$PATH
  - export PREFIX=./AppImage-manpages
  - mkdir -p $PREFIX/{man,pdf,epub,html}
  - export MANDIR=$PREFIX/man
  - export PDFDIR=$PREFIX/pdf
  - export EPUBDIR=$PREFIX/epub
  - export HTMLDIR=$PREFIX/html
  - export VERSION=0.0.1
  - export DATE=$(/bin/date "+%Y-%m-%d")
  - find $HOME/.local -type f -ls        # For debugging only
  - find $PREFIX      -type d -ls        # For debugging only
    #- find /usr/share/texlive -type f -name unicode-math.sty -ls
    #- find /usr/share/texlive -type f -name unicode-math.sty
    #- find /usr/share/texlive -type f -name filehook.sty -ls
    #- find /usr/share/texlive -type f -name filehook.sty
    #- dpkg -S /usr/share/texlive/texmf-dist/tex/latex/unicode-math/unicode-math.sty
    #- dpkg -S /usr/share/texlive/texmf-dist/tex/latex/filehook/filehook.sty

script:

  - ls -l markdown/*.md

    # Generate manual pages:
  - for i in markdown/AppIm*.md ; do cat $i | sed 's#__date__#'"$DATE"'#' | pandoc - -s -t man   -f markdown -o $MANDIR/$(basename ${i/-manpage.md/.man}) -V footer:"Manual Page Version $VERSION, $DATE" ; done

    # Generate HTML docs:
  - for i in markdown/AppIm*.md ; do cat $i | sed 's#__date__#'"$DATE"'#' | pandoc - -s -t html  -f markdown -o $HTMLDIR/$(basename ${i/-manpage.md/.html}) --toc ; done

    # Generate EPUB docs:
  - for i in markdown/AppIm*.md ; do cat $i | sed 's#__date__#'"$DATE"'#' | pandoc - -s -t epub3 -f markdown -o $EPUBDIR/$(basename ${i/-manpage.md/.epub}) --toc ; done

    # Generate PDF docs:
  - for i in markdown/AppIm*.md ; do cat markdown/fancyheaderfooter.tex | sed 's#themanpage#'"$(basename ${i/-manpage.md/})"'#' | tee markdown/$(basename ${i/-manpage.md/-fancyheaderfooter.tex}) ; done
  - for i in markdown/AppIm*.md ; do cat $i | sed 's#__date__#'"$DATE"'#' | pandoc - -s -t latex -f markdown -o $PDFDIR/$(basename ${i/-manpage.md/.pdf})   --toc -V geometry:"margin=1.5cm, paperwidth=595pt, paperheight=297mm" --pdf-engine=xelatex -H markdown/$(basename ${i/-manpage.md/-fancyheaderfooter.tex}) -V classoption:"twoside" ; done
  - rm -rf markdown/AppImage-*-fancyheaderfooter.tex

    # Post-process manual pages (move them into appropriate sections):
  - mkdir $MANDIR/man{1,2,3,4,5,6,7}
  - for i in AppImage-{appimageupdatetool,linuxdeployqt,AppImageUpdate,zsync2,zsyncmake2}.man ; do mv $MANDIR/$i $MANDIR/man1/${i/.man/.1} ; gzip $MANDIR/man1/${i/.man/.1} ; done   # Same for appimagetool,pkg2appimage
  - for i in AppImage-Overview.man                                                            ; do mv $MANDIR/$i $MANDIR/man7/${i/.man/.7} ; gzip $MANDIR/man7/${i/.man/.7} ; done   # Same for AppDir,AppRun,Legacy,FAQ,payload,runtime,validate
    #- for i in AppImage-AppImage.man                                                            ; do mv $MANDIR/$i $MANDIR/man5/${i/.man/.5} ; gzip $MANDIR/man5/${i/.man/.5} ; done   # Same for ?
    #- for i in AppImage-appimaged.man                                                           ; do mv $MANDIR/$i $MANDIR/man8/${i/.man/.8} ; gzip $MANDIR/man8/${i/.man/.8} ; done   # Same for ?

    # Create mandb database for 'apropos' and 'whatis':
  - MANPATH=$MANDIR mandb -u -c -s

    # Test if we got an index.db:
  - ls -l $MANDIR/index*

    # Test if 'apropos' + 'whatis' work:
  - MANPATH=$MANDIR apropos -l AppImage
  - MANPATH=$MANDIR apropos -l linuxdeploy appimageupdate zsync overview
  - MANPATH=$MANDIR whatis  -l AppImage-linuxdeployqt

    # Download other docu from around the AppImage project:
  - wget https://github.com/AppImage/AppImageSpec/raw/master/README.md    -O $HOME/Downloads/AppimageSpec-README.md
  - wget https://github.com/AppImage/AppImageSpec/raw/master/draft.md     -O $HOME/Downloads/AppImageSpec-Draft.md
  - wget https://github.com/AppImage/AppImages/raw/master/YML.md          -O $HOME/Downloads/Building-AppImages-per-YML-Recipe.md
  - wget https://github.com/AppImage/AppImageUpdate/raw/rewrite/README.md -O $HOME/Downloads/AppImageUpdate-README.md

    # Generate HTML, EPUB and PDF from downloaded docu:
  - for i in $HOME/Downloads/*.md; do pandoc $i -s -t html  -f markdown -o $HTMLDIR/${i/.md/.html} --toc -V title="$( echo "$(basename ${i/.md/})" | sed 's/-/ /g' )" ; done
  - for i in $HOME/Downloads/*.md; do pandoc $i -s -t epub3 -f markdown -o $EPUBDIR/${i/.md/.epub} --toc -V title="$( echo "$(basename ${i/.md/})" | sed 's/-/ /g' )" ; done
  - for i in $HOME/Downloads/*.md; do pandoc $i -s -t PDF   -f markdown -o $PDFDIR/${i/.md/.pdf}   --toc -V title="$( echo "$(basename ${i/.md/})" | sed 's/-/ /g' )" -V geometry:"margin=2cm, paperwidth=595pt, paperheight=29.7cm --pdfengine=xelatex -V classoption:"twoside" -H markdown/$basename ${i/.md/-fancyheaderfooter.tex})"; done

    # Make tarball:
  - export TARBALL=AppImage-manpages-$TRAVIS_BUILD_NUMBER-git.$(git rev-parse --short HEAD)-$DATE.tar.gz
  - tar cvzf $TARBALL $PREFIX

    # Upload results:
    #- wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
    #- bash upload.sh ./$TARBALL     # Not yet!
  - curl --upload-file $TARBALL  https://transfer.sh/$TARBALL

